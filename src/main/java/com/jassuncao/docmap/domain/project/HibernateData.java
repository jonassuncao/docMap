package com.jassuncao.docmap.domain.project;

import com.jassuncao.docmap.domain.attribute.Attribute;
import com.jassuncao.docmap.domain.entity.Entity;
import org.apache.commons.lang3.StringUtils;

import java.time.LocalDate;
import java.util.HashMap;
import java.util.List;

/**
 * @author jonathas.assuncao - jaa020399@gmail.com
 * 15/09/2021
 */
public class HibernateData {

    private final HibernateAttributeData attributes;
    private final Entity entity;
    private final Project project;

    public HibernateData(Project project, Entity entity, List<? extends Attribute> attributes) {
        this.project = project;
        this.entity = entity;
        this.attributes = HibernateAttributeData.process(attributes);
    }

    public Object getParams() {
        final HashMap<String, Object> params = new HashMap<>();
        params.put("package", pack());
        params.put("imports", attributes.getImports());
        params.put("headers", header(entity));
        params.put("entity", Normalize.dataBaseForm(entity.getAlias()));
        params.put("attributes", attributes.getAttributes());
        params.put("className", Normalize.classForm(entity.getAlias()));
        params.put("gettersSetters", attributes.getGetSet());
        return params;
    }

    private String pack() {
        return new StringBuilder()
                .append("com.")
                .append(Normalize.packageForm(project.getName()))
                .append(".")
                .append(Normalize.packageForm(entity.getAlias()))
                .toString();
    }

    private List<String> header(Entity entity) {
        final String safeValue = StringUtils.defaultIfEmpty(entity.getDescription(), StringUtils.EMPTY);
        final List<String> description = Normalize.splitPreserveTokens(safeValue, 120);
        description.add(StringUtils.EMPTY);
        description.add(String.format("Generated by docMap - %s", LocalDate.now()));
        return description;
    }
}
